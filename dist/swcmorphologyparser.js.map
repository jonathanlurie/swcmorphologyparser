{"version":3,"file":"swcmorphologyparser.js","sources":["../src/TreeNode.js","../src/TreeNodeCollection.js","../src/SwcParser.js"],"sourcesContent":["\n/**\n * A TreeNode instance represent a point from the SWC file. It has a 3D coordinate,\n * an ID, a type, a radius, a reference to a parent (which is also a TreeNode\n * instance) and a list of children (also TreeNode instances).\n *\n * **Ressources**\n * - [SWC Spec](http://www.neuronland.org/NLMorphologyConverter/MorphologyFormats/SWC/Spec.html)\n */\nclass TreeNode {\n\n  /**\n   * @param {Number} id - the id of the point\n   * @param {Number} type - type of structure this point comes from (cf. SWC spec)\n   * @param {Number} x - x component of the 3D coordinates\n   * @param {Number} y - y component of the 3D coordinates\n   * @param {Number} z - z component of the 3D coordinates\n   * @param {Number} r - radius at this given point\n   */\n  constructor (id, type, x, y, z, r ) {\n    this._id = id\n    this._type = type\n    this._position = [x, y, z]\n    this._radius = r\n\n    this._parent = null\n    this._children = []\n  }\n\n\n  /**\n   * Get the ID of _this_ node\n   * @return {Number}\n   */\n  getId () {\n    return this._id\n  }\n\n\n  /**\n   * Get the type as a number (according to the SWC spec)\n   * @return {Number}\n   */\n  getType () {\n    return this._type\n  }\n\n\n  /**\n   * Get teh radius of _this_ node\n   * @return {Number}\n   */\n  getRadius () {\n    return this._radius\n  }\n\n\n  /**\n   * Get the 3D coordinates of this node\n   */\n  getPosition () {\n    return this._position\n  }\n\n  /**\n   * Define the parent of _this_ node\n   * @param {TreeNode} parent - the parent node\n   */\n  setParent (pNode) {\n    this._parent = pNode\n    pNode._addChild(this)\n  }\n\n\n  /**\n   * Get the parent node of _this_ one\n   * @return {TreeNode}\n   */\n  getParent () {\n    return this._parent\n  }\n\n\n  /**\n   * @private\n   * Add a child to _this_ node\n   * @param {TreeNode} cNode - a node to add as a child of _this_\n   */\n  _addChild (cNode) {\n    if (!this.doesAlreadyHaveChild(cNode)) {\n      this._children.push(cNode)\n    }\n  }\n\n\n  /**\n   * Get all the chidren\n   * @return {Array} array of TreeNode instances\n   */\n  getChildren () {\n    return this._children\n  }\n\n\n  /**\n   * Check is _this_ node already has the given child amond its list of children\n   * @param {TreeNode} cNode - some node to test, most likely a potential child\n   * @return {Boolean} true if this child is already present, false if not\n   */\n  doesAlreadyHaveChild (cNode) {\n    for (let i=0; i<this._children.length; i++) {\n      if (this._children[i].getId() === cNode.getId())\n        return true\n    }\n    return false\n  }\n\n}\n\nexport { TreeNode }\n","import { TreeNode } from './TreeNode.js'\n\n\n/**\n * A TreeNodeCollection instance builds all the TreeNode instances from the raw\n * points list from the SWC file. As a second step, it builds the parent/children\n * relations between the nodes and as a third step, define a list of sections.\n */\nclass TreeNodeCollection {\n\n  /**\n   * @param {Array} points - every points of the array is itself an Array of form:\n   * [\n   *     pointId: Number,\n   *     pointType: Number,\n   *     x: Number,\n   *     y: Number,\n   *     z: Number,\n   *     radius: Number,\n   *     parentId: Number\n   *   ]\n   */\n  constructor (points) {\n    this._nodes = {}\n\n    this._initCollection(points)\n  }\n\n\n  /**\n   * @private\n   * Makes the list of nodes\n   */\n  _initCollection (points) {\n    for (let i=0; i<points.length; i++) {\n      let aNode = new TreeNode(\n        points[i][0], // id\n        points[i][1], // type\n        points[i][2], // x\n        points[i][3], // y\n        points[i][4], // z\n        points[i][5], // radius\n      )\n\n      this._nodes[points[i][0]] = aNode\n\n      // In the SWC, a node/point seems to be always described after its parent,\n      // so we can makes the parent/children links in the same loop\n      let parentId = points[i][6]\n\n      // the first point of the soma has no parent\n      if (parentId === -1)\n        continue\n\n      let theParentNode = this._nodes[ parentId ]\n      aNode.setParent( theParentNode )\n    }\n\n    console.log(this._nodes)\n  }\n\n\n}\n\nexport { TreeNodeCollection }\n","import { TreeNodeCollection } from './TreeNodeCollection.js'\n\n\nclass SwcParser {\n\n  constructor () {\n\n  }\n\n\n  parse (swcStr) {\n    let rawPoints = this._extractPoints(swcStr)\n    let treeNodeCollection = new TreeNodeCollection(rawPoints)\n  }\n\n\n  /**\n   * @private\n   * build an Array of points from the SWC string.\n   * Each element of the array is itself an Array representing a point and it's metadata.\n   * A single point is an Array of form:\n   *   [\n   *     pointId: Number,\n   *     pointType: Number,\n   *     x: Number,\n   *     y: Number,\n   *     z: Number,\n   *     radius: Number,\n   *     parentId: Number\n   *   ]\n   * @param {String} swcStr - the string from the SWC file\n   * @return {Array} all the points\n   */\n  _extractPoints (swcStr) {\n    // remove header/comments from SWC\n    let result = swcStr.replace(/\\s*#.*?$/mg,'')\n    // remove empty lines and empty last line\n    result = result.trim().replace(/^\\s*$/mg,'')\n\n    // store the data in memory-efficient typed arrays\n    let lines = result.split('\\n')\n    let swcPoints = []\n\n    for (let i=0; i<lines.length; i++) {\n      let row = lines[i].replace(/^\\s+/m,'').replace(/\\s+$/m,'').split(/[\\s,]+/)\n      if (row.length >= 7) {\n        // allow for sloppy SWC that contains integers written as floats\n        swcPoints[i] = [\n          Math.round(parseFloat(row[0])),\n          Math.round(parseFloat(row[1])),\n          parseFloat(row[2]),\n          parseFloat(row[3]),\n          parseFloat(row[4]),\n          parseFloat(row[5]),\n          Math.round(parseFloat(row[6]))\n        ]\n      }\n    }\n\n    console.log(swcPoints)\n    return swcPoints\n  }\n\n\n}\n\nexport { SwcParser }\n"],"names":[],"mappings":";;;;;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,QAAQ,CAAC;;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG;EACtC,IAAI,IAAI,CAAC,GAAG,GAAG,GAAE;EACjB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAI;EACrB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;EAC9B,IAAI,IAAI,CAAC,OAAO,GAAG,EAAC;;EAEpB,IAAI,IAAI,CAAC,OAAO,GAAG,KAAI;EACvB,IAAI,IAAI,CAAC,SAAS,GAAG,GAAE;EACvB,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,KAAK,CAAC,GAAG;EACX,IAAI,OAAO,IAAI,CAAC,GAAG;EACnB,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,OAAO,CAAC,GAAG;EACb,IAAI,OAAO,IAAI,CAAC,KAAK;EACrB,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,OAAO;EACvB,GAAG;;;EAGH;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI,CAAC,SAAS;EACzB,GAAG;;EAEH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,OAAO,GAAG,MAAK;EACxB,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,EAAC;EACzB,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,GAAG;EACf,IAAI,OAAO,IAAI,CAAC,OAAO;EACvB,GAAG;;;EAGH;EACA;EACA;EACA;EACA;EACA,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE;EACpB,IAAI,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE;EAC3C,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAC;EAChC,KAAK;EACL,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,OAAO,IAAI,CAAC,SAAS;EACzB,GAAG;;;EAGH;EACA;EACA;EACA;EACA;EACA,EAAE,oBAAoB,CAAC,CAAC,KAAK,EAAE;EAC/B,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAChD,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,EAAE;EACrD,QAAQ,OAAO,IAAI;EACnB,KAAK;EACL,IAAI,OAAO,KAAK;EAChB,GAAG;;EAEH,CAAC;;EClHD;EACA;EACA;EACA;EACA;EACA,MAAM,kBAAkB,CAAC;;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,WAAW,CAAC,CAAC,MAAM,EAAE;EACvB,IAAI,IAAI,CAAC,MAAM,GAAG,GAAE;;EAEpB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAC;EAChC,GAAG;;;EAGH;EACA;EACA;EACA;EACA,EAAE,eAAe,CAAC,CAAC,MAAM,EAAE;EAC3B,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxC,MAAM,IAAI,KAAK,GAAG,IAAI,QAAQ;EAC9B,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAO;;EAEP,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAK;;EAEvC;EACA;EACA,MAAM,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;;EAEjC;EACA,MAAM,IAAI,QAAQ,KAAK,CAAC,CAAC;EACzB,QAAQ,QAAQ;;EAEhB,MAAM,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,GAAE;EACjD,MAAM,KAAK,CAAC,SAAS,EAAE,aAAa,GAAE;EACtC,KAAK;;EAEL,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAC;EAC5B,GAAG;;;EAGH,CAAC;;EC3DD,MAAM,SAAS,CAAC;;EAEhB,EAAE,WAAW,CAAC,GAAG;;EAEjB,GAAG;;;EAGH,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE;EACjB,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAC;EAC/C,IAAI,IAAI,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,SAAS,EAAC;EAC9D,GAAG;;;EAGH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,EAAE,cAAc,CAAC,CAAC,MAAM,EAAE;EAC1B;EACA,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAC;EAChD;EACA,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAC;;EAEhD;EACA,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAC;EAClC,IAAI,IAAI,SAAS,GAAG,GAAE;;EAEtB,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACvC,MAAM,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAC;EAChF,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;EAC3B;EACA,QAAQ,SAAS,CAAC,CAAC,CAAC,GAAG;EACvB,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,UAAU,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B,UAAU,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B,UAAU,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B,UAAU,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5B,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxC,UAAS;EACT,OAAO;EACP,KAAK;;EAEL,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC;EAC1B,IAAI,OAAO,SAAS;EACpB,GAAG;;;EAGH,CAAC;;;;;;;;;;;;"}